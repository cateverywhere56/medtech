---
import fs from 'node:fs';
import path from 'node:path';
import matter from 'gray-matter';
import Markdown from 'astro/components/Markdown.astro';

const slugParam = Astro.params.slug;
const slug = Array.isArray(slugParam) ? slugParam.join('/') : (slugParam || '');

const dir = path.join(Astro.srcDir, 'content', 'papers');
const files = fs.existsSync(dir) ? fs.readdirSync(dir).filter(f => f.endsWith('.md')) : [];

let found = null;
for (const f of files) {
  const raw = fs.readFileSync(path.join(dir, f), 'utf-8');
  const { data, content } = matter(raw);
  if (data.permalink === `/papers/${slug}` || f.startsWith(slug)) {
    found = { data, content };
    break;
  }
}
if (!found) return Astro.redirect('/');
const { data, content } = found;
---
<html lang="fr">
  <head>
    <meta charset="utf-8" />
    <title>{data.title} â€” Paper du jour</title>
    <meta name="description" content={data.summary} />
  </head>
  <body style="font-family: system-ui; max-width: 760px; margin: 0 auto; padding: 24px;">
    <header>
      <a href="/" style="text-decoration:none;color:inherit"><h1>Paper du jour â€” IA</h1></a>
    </header>
    <article style="margin-top:24px;">
      <h2 style="margin-bottom:4px;">{data.title}</h2>
      <div style="opacity:.7;font-size:14px;">
        PubliÃ© le {new Date(data.date).toLocaleDateString('fr-FR')} Â· {(data.tags || []).join(', ')}
      </div>
      <p style="margin-top:16px; white-space:pre-wrap;">{data.summary}</p>
      {data.importance && <p style="margin-top:12px; font-style: italic;">Pourquoi c'est important â€” {data.importance}</p>}
      <hr style="margin:24px 0;" />
      <Markdown>{content}</Markdown>
      <p style="margin-top:24px;">
        ðŸ”— Source: <a href={data.sourceUrl} target="_blank" rel="noreferrer">{data.sourceUrl}</a>
      </p>
    </article>
  </body>
</html>
